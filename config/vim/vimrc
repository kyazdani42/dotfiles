let mapleader =" "

" ==================================
" Plugins
" ==================================

if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
	"the file directory
	Plug 'scrooloose/nerdtree'

	"comment plugin with ctrl + / (2 times)
	Plug 'tomtom/tcomment_vim'

	"the colorscheme
	Plug 'drewtempelmeyer/palenight.vim'

	"asynchronous lint engine
	Plug 'dense-analysis/ale'

	"the lightline at the bottom
	Plug 'itchyny/lightline.vim'

	"change/delete surrounding char
	Plug 'tpope/vim-surround'

	"changes vim workdir to project root
	Plug 'airblade/vim-rooter'
	"fuzzyfinder for vim
	Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
	Plug 'junegunn/fzf.vim'

	"hilight when yanking
	Plug 'machakann/vim-highlightedyank'

	Plug 'leafgarland/typescript-vim'

call plug#end()

" Color stuff
set background=dark
colorscheme palenight
syntax on " Syntax highlighting

if (has("nvim"))
	let $NVIM_TUI_ENABLE_TRUE_COLOR=1
endif

let g:lightline = { 'colorscheme': 'palenight' }

if (has("termguicolors"))
	set termguicolors
endif
if !has('gui_running')
	set t_Co=256
endif

" ==========================
" Settings
" ==========================

"autoclose tags on scripting files
autocmd Filetype html,xml,xsl,php source ~/.vim/plugins/closetag/plugin/closetag.vim

" Mouse support
set mouse=a " enable mouse
set mousehide " hide mouse while typing

" Stuff
set autoread " reload file when it changes
set confirm " disable 'no write'
set showmatch "Show matching brackets/parenthesis
set number relativenumber "Relative numbers
set cursorline " Highlight current line
set backspace=indent,eol,start "Easy backspace
set splitbelow splitright " Splits open at the bottom and right
set clipboard=unnamed "Use system clipboard
set ruler " Show line and column number of cursor pos
autocmd BufWritePre * %s/\s\+$//e " Automatically deletes all trailing whitespace on save.
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o " disable autocommenting on newline

" Encoding
set encoding=utf-8 " displayed encoding
set fileencoding=utf-8 " written to file encoding

"Disable vi-compatibility
set nocompatible
set ttyfast
set wildmode=longest,list,full

" Indentation
set smartindent
set tabstop=4
set shiftwidth=4
set expandtab
filetype plugin indent on
autocmd FileType typescript,javascript set tabstop=2 shiftwidth=2

" Use statusbar on all windows
set laststatus=2
set scrolloff=9999

" Search settings
set smartcase
set incsearch
set hlsearch
set ignorecase

" ==================================
" mappings
" ==================================

map <C-n> :NERDTreeToggle<CR>

" Disable Ex mode
nnoremap Q <Nop>

" control j to escape
map <C-j> <Nop>
inoremap <C-j> <Esc>
noremap <C-j> <Esc>

" disable all escapes to force using c-j
inoremap <Esc> <Nop>
vnoremap <Esc> <Nop>
inoremap <C-c> <Nop>
vnoremap <C-c> <Nop>
inoremap <C-[> <Nop>
vnoremap <C-[> <Nop>

map <leader>w :w<CR>
map <leader>x :x<CR>

vmap <Leader>y "+y

"toggle buffer
nnoremap <leader><leader> <c-^>

" Oups
map <F1> <Esc>
imap <F1> <Esc>

map H ^
map L $

" M to make
noremap M :!make<cr>

"disable arrow keys
noremap <Left> <Nop>
noremap <Right> <Nop>
noremap <Up> <Nop>
noremap <Down> <Nop>
inoremap <Left> <Nop>
inoremap <Right> <Nop>
inoremap <Up> <Nop>
inoremap <Down> <Nop>

"fzf config
map <leader>o :Buffers<CR>
map <C-p> :Files<CR>
map <leader>p :Rg<CR>
map <leader>f :GFiles<CR>

" =====================
" Plugin configuration
" =====================

" Highlighted yank
let g:highlightedyank_highlight_duration = 300

" Ale
let g:ale_parse_c_makefile = 1

