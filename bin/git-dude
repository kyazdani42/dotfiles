#!/usr/bin/env bash
#
# git-dude - Git commit notifier
# https://github.com/sickill/git-dude
#
# Copyright (C) 2011-2015 Marcin Kulik <http://ku1ik.com/>
#
# Distributed under the GNU General Public License, version 3.0.

set -e

interval=${interval:-30}
app_name=$(basename $0)

export LC_ALL=C # make sure git talks english

function dudenotify() {
    local ICON_PATH="$1"
    local TITLE="$2"
    local DESCRIPTION="$3"

    notify-send -i "$ICON_PATH" "$TITLE" "$DESCRIPTION"

    date "+%x %X"
    echo "$TITLE"
    if [ -n "$DESCRIPTION" ]; then
        echo "$DESCRIPTION"
    fi
    echo
}

[[ -d "$1" ]] && cd $1

while true; do
    for dir_name in *; do
        if [[ -d "$dir_name" && $(cd "$dir_name"; git rev-parse --git-dir 2>/dev/null) ]]; then

            if [[ $(cd "$dir_name"; git config dude.ignore) == true ]]; then
                continue
            fi

            repo_name=$(basename "$dir_name" .git)
            cd "$dir_name"

            remote=$(git config dude.remote || true)
            changes=$(git fetch $remote 2>&1 | grep -F -- '->' | sed 's/^ [+*=!-] //')

            icon_path=$(git config dude.icon || true)
            icon_path=${icon_path:-`pwd`/icon.png}
            icon_path=${icon_path// /\\ } # escape spaces before eval
            eval icon_path=$icon_path # to expand ~

            while read -r line; do
                case $line in
                    *..*)
                        commit_range=$(echo "$line" | awk '{ print $1 }')
                        branch_name=$(echo "$line" | awk '{ print $2 }')
                        commit_messages=$(git log $commit_range --pretty=format:'%s (%an)')
                        notify_message="New commits in $repo_name/$branch_name"
                        if [ -n "$remote" ]; then
                            notify_message="${notify_message} at $remote"
                        fi
                        dudenotify $icon_path "$notify_message" "$commit_messages"
                        ;;
                    *new\ branch*)
                        branch_name=$(echo "$line" | awk '{ print $3 }')
                        notify_message="New branch $repo_name/$branch_name"
                        if [ -n "$remote" ]; then
                            notify_message="${notify_message} at $remote"
                        fi
                        dudenotify $icon_path "$notify_message" ""
                        ;;
                esac
            done <<< "$changes"

            cd - &>/dev/null
        fi
    done
    if [ "$interval" = "0" ]; then    
        exit 0
    else
        sleep $interval
    fi
done
