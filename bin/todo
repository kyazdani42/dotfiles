#!/usr/bin/env bash

error() {
    printf "usage: $(basename $0) [OPERATOR]\n"
    exit 1
}

[ $# == 0 ] && error

TODO_PATH="$HOME/.local/share/todo.md"

print_data() {
    rg "\*\*$1\*\*" "$TODO_PATH" | sed "s/\*\*$1\*\* //"
}

error_get() {
    printf "usage: $(basename $0) get [high-medium-low-all]\n"
    exit 1
}

get() {
    level="$1"
    options=("high" "medium" "low", "all")
    PS3="Select a todo level: "
    [ -z "$level" ] && select l in "${options[@]}"; do level=$l; break; done
    printf "\n"

    case "$level" in
        "high")
            printf "todo (high):\n"
            print_data HI
            ;;
        "medium")
            printf "todo (medium):\n"
            print_data MED
            ;;
        "low")
            printf "todo (low):\n"
            print_data LOW
            ;;
        "all")
            printf "todo (high):\n"
            print_data HI
            printf "\ntodo (medium):\n"
            print_data MED
            printf "\ntodo (low):\n"
            print_data LOW
            ;;
        *)
            error_get
    esac
}

error_add() {
    printf "usage: $(basename $0) add [high-medium-low] [TODO]\n"
    exit 1
}

add() {
    level="$1"
    options=("high" "medium" "low")
    PS3="Select a todo level: "
    [ -z "$level" ] && select l in "${options[@]}"; do level=$l; break; done
    printf "\n"

    todo="$2"
    [ -z "$todo" ] && printf "What do you want to do ?\n" && read todo;

    case "$level" in
        "high")
            echo "- **HI** $todo" >> "$TODO_PATH"
            ;;
        "medium")
            echo "- **MED** $todo" >> "$TODO_PATH"
            ;;
        "low")
            echo "- **LOW** $todo" >> "$TODO_PATH"
            ;;
        *)
            error_add
    esac

    printf "new todo added to todolist\n"
}

remove_entry() {
    grep -F -v -- "$1" "$TODO_PATH" > "$TODO_PATH.tmp" && mv "$TODO_PATH.tmp" "$TODO_PATH"
}

remove() {
    opt=`cat $TODO_PATH | sed 's/- \*\*HI\*\* //' | sed 's/- \*\*MED\*\* //' | sed 's/- \*\*LOW\*\* //'`
    readarray -t options <<<"$opt"
    PS3="Which todo do you want to remove ? "
    select l in "${options[@]}"; do todo="$l"; break; done
    printf "\n"

    remove_entry "$todo"
    printf "Todo '$todo' properly removed from todolist\n"
}

error_move() {
    printf "todo: move error, wrong level type\n"
    exit 1
}

move_element() {
    remove_entry "$1"
    echo "- **$2** $1" >> "$TODO_PATH"
}

move() {
    opt=`cat $TODO_PATH | sed 's/- \*\*HI\*\* //' | sed 's/- \*\*MED\*\* //' | sed 's/- \*\*LOW\*\* //'`
    readarray -t options <<<"$opt"
    PS3="Which todo do you want to move ? "
    select l in "${options[@]}"; do todo="$l"; break; done
    printf "\n"

    options=("high" "medium" "low")
    PS3="Move to:"
    select l in "${options[@]}"; do new_level="$l"; break; done

    line=$(grep -n "$todo" "$TODO_PATH" | cut -d':' -f1)
    case "$new_level" in
        "high")
            move_element "$todo" "HI";;
        "medium")
            move_element "$todo" "MED";;
        "low")
            move_element "$todo" "LOW";;
        *)
            error_move
    esac
    
}

case "$1" in
    "get")
        get "$2"
        ;;
    "move")
        move "$2"
        ;;
    "add")
        add "$2"
        ;;
    "remove")
        remove "$2"
        ;;
    *)
        error
esac
